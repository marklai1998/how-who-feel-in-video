{"version":3,"sources":["../../routes/login.js"],"names":["express","require","router","Router","db","mongoose","users","model","crypto","get","req","res","next","session","loginsuccess","redirect","show_message","message","title","field","type","username","render","params","post","body","login","findOne","user","password","console","log","hash","createHash","update","digest","updated_at","Date","now","module","exports"],"mappings":"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","file":"login.js","sourcesContent":["const express = require('express');\nconst router = express.Router();\n\nconst db = require('../db/users');\nconst mongoose = require('mongoose');\nconst users = mongoose.model('users');\n\nconst crypto = require('crypto');\n\nrouter.get('/', function (req, res, next) {\n    if (req.session.loginsuccess) {\n        res.redirect('/');\n    } else {\n        let show_message = false,\n            message = \"\",\n            title = 'Login',\n            field = 'Username',\n            type = 'Text';\n        switch (req.session.message) {\n            case \"no_user\":\n                show_message = true;\n                message = \"Username not found\";\n                break;\n            case \"wrong_password\":\n                show_message = true;\n                message = \"Password is incorrect\";\n                type = 'Password';\n                title = 'Welcome ' + req.session.username;\n                field = 'Password';\n                break;\n        }\n        res.render('login', {title: title, field: field, type: type, show_message: show_message, message: message});\n        req.session.message = null;\n    }\n});\n\nrouter.get('/message/:message', function (req, res, next) {\n    req.session.message = req.params.message;\n    res.redirect(\"/login\");\n});\n\nrouter.post('/', function (req, res, next) {\n    if (req.session.loginsuccess) res.redirect(\"/\");\n    if (req.body.username) {\n        const login = async (username) => {\n            try {\n                const user = await users.findOne({username: username});\n                if (user) {\n                    req.session.username = user.username;\n                    req.session.password = user.password;\n                    res.render('login', {title: 'Welcome ' + username, field: 'Password', type: 'Password'});\n                } else res.redirect('/login/message/no_user');\n            } catch (err) {\n                return err\n            }\n        };\n        console.log(login(req.body.username));\n    } else if (req.body.password) {\n        if (req.session.username && req.session.password) {\n            const login = async (username, password) => {\n                const hash = crypto.createHash('sha256').update(password).digest('base64');\n                if (req.session.password === hash) {\n                    try {\n                        await users.update({username: username}, {updated_at: Date.now()});\n                        req.session.loginsuccess = true;\n                        res.redirect(\"/\");\n                    } catch (err) {\n                        return err\n                    }\n                } else res.redirect('/login/message/wrong_password')\n            };\n            console.log(login(req.session.username, req.body.password));\n        } else res.redirect(\"/\")\n    } else res.redirect(\"/\")\n});\n\nmodule.exports = router;\n"]}
{"version":3,"sources":["../../routes/videos.js"],"names":["express","require","router","Router","db","mongoose","videos","model","local_file","fileUpload","path","fs","get","req","res","next","session","username","show_message","message","find_all_videos","find","all_videos","render","title","console","log","redirect","params","remove","_id","post","files","video","length","forEach","upload_video","upload","headers","module","exports"],"mappings":";;;;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,SAASF,QAAQG,MAAR,EAAf;;AAEA,IAAMC,KAAKH,QAAQ,cAAR,CAAX;AACA,IAAMI,WAAWJ,QAAQ,UAAR,CAAjB;AACA,IAAMK,SAASD,SAASE,KAAT,CAAe,QAAf,CAAf;;AAEA,IAAMC,aAAaP,QAAQ,wBAAR,CAAnB;AACA,IAAMQ,aAAaR,QAAQ,oBAAR,CAAnB;AACA,IAAMS,OAAOT,QAAQ,MAAR,CAAb;AACA,IAAMU,KAAKV,QAAQ,IAAR,CAAX;;AAEAC,OAAOU,GAAP,CAAW,GAAX,EAAgB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAAA;;AACtC,QAAIF,IAAIG,OAAJ,CAAYC,QAAhB,EAA0B;AACtB,YAAIC,eAAe,KAAnB;AACA,YAAIC,UAAU,EAAd;AACA,gBAAQN,IAAIG,OAAJ,CAAYG,OAApB;AACI,iBAAK,SAAL;AACID,+BAAe,IAAf;AACAC,0BAAU,kBAAV;AACA;AACJ,iBAAK,SAAL;AACID,+BAAe,IAAf;AACAC,0BAAU,gBAAV;AACA;AACJ,iBAAK,OAAL;AACID,+BAAe,IAAf;AACAC,0BAAU,OAAV;AACA;AACJ,iBAAK,QAAL;AACID,+BAAe,IAAf;AACAC,0BAAU,eAAV;AACA;AAhBR;AAkBA,YAAMC;AAAA,+EAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAESd,OAAOe,IAAP,EAFT;;AAAA;AAEVC,0CAFU;;AAGhBR,oCAAIS,MAAJ,CAAW,QAAX,EAAqB;AACjBC,2CAAO,QADU;AAEjBN,kDAAcA,YAFG;AAGjBC,6CAASA,OAHQ;AAIjBF,8CAAUJ,IAAIG,OAAJ,CAAYC,QAJL;AAKjBX,4CAAQgB;AALS,iCAArB;AAHgB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAlB;;AAAA;AAAA;AAAA;AAAA,WAAN;AAcAG,gBAAQC,GAAR,CAAYN,iBAAZ;AACAP,YAAIG,OAAJ,CAAYG,OAAZ,GAAsB,IAAtB;AACH,KArCD,MAqCOL,IAAIa,QAAJ,CAAa,QAAb;AACV,CAvCD;;AAyCAzB,OAAOU,GAAP,CAAW,mBAAX,EAAgC,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACtD,QAAIF,IAAIG,OAAJ,CAAYC,QAAhB,EAA0B;AACtBJ,YAAIG,OAAJ,CAAYG,OAAZ,GAAsBN,IAAIe,MAAJ,CAAWT,OAAjC;AACAL,YAAIa,QAAJ,CAAa,SAAb;AACH,KAHD,MAGOb,IAAIa,QAAJ,CAAa,QAAb;AACV,CALD;;AAOAzB,OAAOU,GAAP,CAAW,cAAX,EAA2B,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACjD,QAAIF,IAAIG,OAAJ,CAAYC,QAAhB,EAA0B;AACtBQ,gBAAQC,GAAR,CAAYlB,WAAWqB,MAAX,CAAkBhB,IAAIe,MAAJ,CAAWE,GAA7B,EAAiC,YAAY;AACrDhB,gBAAIa,QAAJ,CAAa,wBAAb;AACH,SAFW,CAAZ;AAGH,KAJD,MAIOb,IAAIa,QAAJ,CAAa,QAAb;AACV,CAND;;AAQAzB,OAAO6B,IAAP,CAAY,SAAZ,EAAuB,UAAUlB,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC7C,QAAIF,IAAIG,OAAJ,CAAYC,QAAhB,EAA0B;AACtB,YAAI,CAACJ,IAAImB,KAAT,EAAgB;AACZlB,gBAAIa,QAAJ,CAAa,yBAAb;AACH;AACD,YAAId,IAAImB,KAAJ,CAAUC,KAAV,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AAC5BrB,gBAAImB,KAAJ,CAAUC,KAAV,CAAgBE,OAAhB,CAAwB,UAAUC,YAAV,EAAwB;AAC5CX,wBAAQC,GAAR,CAAYlB,WAAW6B,MAAX,CAAkBD,YAAlB,EAA+BvB,IAAIyB,OAAJ,CAAY,gBAAZ,CAA/B,EAA8DxB,GAA9D,CAAZ;AACH,aAFD;AAGH,SAJD,MAIO;AACHW,oBAAQC,GAAR,CAAYlB,WAAW6B,MAAX,CAAkBxB,IAAImB,KAAJ,CAAUC,KAA5B,EAAkCpB,IAAIyB,OAAJ,CAAY,gBAAZ,CAAlC,EAAiExB,GAAjE,CAAZ;AACH;AACJ,KAXD,MAWOA,IAAIa,QAAJ,CAAa,QAAb;AACV,CAbD;;AAeAY,OAAOC,OAAP,GAAiBtC,MAAjB","file":"videos.js","sourcesContent":["const express = require('express');\nconst router = express.Router();\n\nconst db = require('../db/videos');\nconst mongoose = require('mongoose');\nconst videos = mongoose.model('videos');\n\nconst local_file = require('../function/local_file');\nconst fileUpload = require('express-fileupload');\nconst path = require('path');\nconst fs = require('fs');\n\nrouter.get('/', function (req, res, next) {\n    if (req.session.username) {\n        let show_message = false;\n        let message = \"\";\n        switch (req.session.message) {\n            case \"no_file\":\n                show_message = true;\n                message = \"No file selected\";\n                break;\n            case \"success\":\n                show_message = true;\n                message = \"Upload success\";\n                break;\n            case \"error\":\n                show_message = true;\n                message = \"Error\";\n                break;\n            case \"delete\":\n                show_message = true;\n                message = \"Video deleted\";\n                break;\n        }\n        const find_all_videos = async () => {\n            try {\n                const all_videos = await videos.find();\n                res.render('videos', {\n                    title: 'Videos',\n                    show_message: show_message,\n                    message: message,\n                    username: req.session.username,\n                    videos: all_videos\n                });\n            } catch (err) {\n                return err;\n            }\n        };\n        console.log(find_all_videos());\n        req.session.message = null;\n    } else res.redirect('/login')\n});\n\nrouter.get('/message/:message', function (req, res, next) {\n    if (req.session.username) {\n        req.session.message = req.params.message;\n        res.redirect(\"/videos\");\n    } else res.redirect('/login');\n});\n\nrouter.get('/delete/:_id', function (req, res, next) {\n    if (req.session.username) {\n        console.log(local_file.remove(req.params._id,function () {\n            res.redirect(\"/videos/message/delete\");\n        }));\n    } else res.redirect('/login');\n});\n\nrouter.post('/upload', function (req, res, next) {\n    if (req.session.username) {\n        if (!req.files) {\n            res.redirect(\"/videos/message/no_file\");\n        }\n        if (req.files.video.length > 1) {\n            req.files.video.forEach(function (upload_video) {\n                console.log(local_file.upload(upload_video,req.headers['content-length'], res));\n            });\n        } else {\n            console.log(local_file.upload(req.files.video,req.headers['content-length'], res));\n        }\n    } else res.redirect('/login')\n});\n\nmodule.exports = router;\n"]}
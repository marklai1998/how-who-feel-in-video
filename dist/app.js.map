{"version":3,"sources":["../app.js"],"names":["express","require","path","favicon","logger","cookieParser","bodyParser","index","videos","analyzer","users","about","login","logout","app","mongoose","session","MongoStore","connect","useMongoClient","use","secret","resave","saveUninitialized","store","mongooseConnection","connection","ttl","json","urlencoded","extended","fileUpload","set","join","__dirname","static","req","res","next","err","Error","status","locals","message","error","get","render","module","exports"],"mappings":"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","file":"app.js","sourcesContent":["const express = require('express');\nconst path = require('path');\nconst favicon = require('serve-favicon');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\n\nconst index = require('./routes/index');\nconst videos = require('./routes/videos');\nconst analyzer = require('./routes/analyzer');\nconst users = require('./routes/users');\nconst about = require('./routes/about');\nconst login = require('./routes/login');\nconst logout = require('./routes/logout');\n\nconst app = express();\n\nconst mongoose = require('mongoose');\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo')(session);\n\n\n// Basic usage\nmongoose.connect('mongodb://localhost/hwfiv', {\n    useMongoClient: true\n    /* other options */\n});\n\napp.use(session({\n    secret: 'hwfiv',\n    resave: true,\n    saveUninitialized: true,\n    store: new MongoStore({mongooseConnection: mongoose.connection, ttl: 60 * 60})\n}));\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: true}));\n\nconst fileUpload = require('express-fileupload');\napp.use(fileUpload());\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', index);\napp.use('/videos', videos);\napp.use('/analyzer', analyzer);\napp.use('/users', users);\napp.use('/about', about);\napp.use('/login', login);\napp.use('/logout', logout);\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n    const err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n});\n\n// error handler\napp.use(function (err, req, res, next) {\n    // set locals, only providing error in development\n    res.locals.message = err.message;\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n    // render the error page\n    res.status(err.status || 500);\n    res.render('error');\n});\n\nmodule.exports = app;\n"]}